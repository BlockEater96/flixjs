name: Publish Package to NPM

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Update Git Submodules
        run: |
          cd protos/omniflixhub-src
          git fetch --all
          git checkout 6d8e061bacf24f712e17c450d1cfc80cdacc78f4
          cd ../..
          cd protos/cosmos-sdk
          git fetch --all
          git checkout v0.50.11
          cd ../..
          cd protos/ibc-go-src
          git fetch --all
          git checkout v7.0.0
          cd ../..
          cd protos/wasmd-src
          git fetch --all
          git checkout v0.54.0
          cd ../..
          cd protos/streampay-src
          git fetch --all
          git checkout v2.5.0
          cd ../..
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Install Protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Proto files
        run: npm run codegen

      - name: Build
        run: npm run build

      - name: Prepare for publishing
        run: npm run prepare-publishing

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          release_name: Release v${{ steps.package-version.outputs.version }}
          draft: false
          prerelease: false 